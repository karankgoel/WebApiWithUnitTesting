// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eBroker.DAL;

namespace eBroker.DAL.Migrations
{
    [DbContext(typeof(EBrokerContext))]
    [Migration("20211224140358_FirstMigration")]
    partial class FirstMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("eBroker.DAL.Models.EquityDB", b =>
                {
                    b.Property<int>("EquityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("EquityId");

                    b.ToTable("Equities");
                });

            modelBuilder.Entity("eBroker.DAL.Models.EquityHoldingDB", b =>
                {
                    b.Property<int>("EquityHoldingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EquityId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int?>("WalletDBWalletId")
                        .HasColumnType("int");

                    b.HasKey("EquityHoldingId");

                    b.HasIndex("WalletDBWalletId");

                    b.ToTable("EquityHoldings");
                });

            modelBuilder.Entity("eBroker.DAL.Models.TransactionOrderDB", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EquityId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<double>("UnitPrice")
                        .HasColumnType("float");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("OrderId");

                    b.ToTable("TransactionOrders");
                });

            modelBuilder.Entity("eBroker.DAL.Models.WalletDB", b =>
                {
                    b.Property<int>("WalletId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("WalletId");

                    b.ToTable("Wallet");
                });

            modelBuilder.Entity("eBroker.DAL.Models.EquityHoldingDB", b =>
                {
                    b.HasOne("eBroker.DAL.Models.WalletDB", null)
                        .WithMany("EquityHoldings")
                        .HasForeignKey("WalletDBWalletId");
                });

            modelBuilder.Entity("eBroker.DAL.Models.WalletDB", b =>
                {
                    b.Navigation("EquityHoldings");
                });
#pragma warning restore 612, 618
        }
    }
}
